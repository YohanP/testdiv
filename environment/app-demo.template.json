{
  "Description" : "D2SI - AWS CloudFormation Template: Demo app",

  "Parameters" : {
    "ASGCapacityDesired" : { "Description" : "The desired size of the Auto Scaling group", "Type" : "Number", "Default" : "2" },
    "ASGCapacityMin" : { "Description" : "The minimum size of the Auto Scaling group", "Type" : "Number", "Default" : "2" },
    "ASGCapacityMax" : { "Description" : "The maximum size of the Auto Scaling group", "Type" : "Number", "Default" : "4" },
    "AppAMI" : { "Description" : "AMI to use for application servers", "Type" : "String" },
    "AppKeyName" : { "Description" : "Key to use for application servers", "Type" : "String" },
    "AppInstanceType" : { "Description" : "Instance type to use for application servers", "Type" : "String" },

    "VpcId" : { "Description" : "VPC to use", "Type" : "String" },
    "AZ1" : { "Description" : "First AZ to use", "Type" : "String" },
    "AZ2" : { "Description" : "Second AZ to use", "Type" : "String" },
    "PublicSubnet1" : { "Description" : "First public subnet", "Type" : "String" },
    "PublicSubnet2" : { "Description" : "Second public subnet", "Type" : "String" },
    "PrivateSubnet1" : { "Description" : "First database subnet", "Type" : "String" },
    "PrivateSubnet2" : { "Description" : "Second database subnet", "Type" : "String" },
    "HostedZoneName" : { "Description" : "DNS zone to update", "Type" : "String" },

    "WebserverInstanceProfile": { "Description" : "Instance profile for web server", "Type" : "String" },
    "SGelb" : { "Description" : "Security group for load-balancer", "Type" : "String" },
    "SGwebservers" : { "Description" : "Security group for web servers", "Type" : "String" },
    "SGstdAccess" : { "Description" : "Security group for all servers", "Type" : "String" },

    "SharedProperties" : { "Description" : "Properties to inject from shared stack", "Type" : "String" },
    "Properties" : { "Description" : "Properties to inject from configuration", "Type" : "String" }

  },

  "Resources" : {

    "ServerASG" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "AvailabilityZones" : [{"Ref" : "AZ1"}, {"Ref" : "AZ2"}],
        "Tags": [ { "Key" : "Name", "Value": "WebServer", "PropagateAtLaunch" : "true" } ],
        "MinSize" : { "Ref" : "ASGCapacityMin" },
        "MaxSize" : { "Ref" : "ASGCapacityMax" },
        "DesiredCapacity" : { "Ref" : "ASGCapacityDesired" },
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ],
        "VPCZoneIdentifier" : [ { "Ref" : "PrivateSubnet1" }, { "Ref" : "PrivateSubnet2" } ],
        "HealthCheckType" : "EC2",
        "HealthCheckGracePeriod" : "600"
      },
      "UpdatePolicy" : {
        "AutoScalingRollingUpdate" : {
          "MaxBatchSize" : "2",
          "MinInstancesInService" : "1"
        }
      }
    },

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "AssociatePublicIpAddress" : "False",
        "ImageId" : { "Ref" : "AppAMI" },
        "KeyName" : { "Ref" : "AppKeyName" },
        "InstanceType" : { "Ref" : "AppInstanceType" }, 
        "IamInstanceProfile" : { "Ref" : "WebserverInstanceProfile" },
        "SecurityGroups" : [ { "Ref" : "SGwebservers" } ,{ "Ref" : "SGstdAccess" }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "rm /var/www/html/application.properties\n",
                "for var in `echo ",{ "Ref" : "Properties" }," ",{ "Ref" : "SharedProperties" }," | tr ',' ' '` \n",
                "do\n",
                "  variable=${var%:*}\n",
                "  value=${var##*:}\n",
                "  echo $variable = $value >> /var/www/html/application.properties\n",
                "done"
              ]
            ]  
          }
        }
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Listeners" : [
            { "LoadBalancerPort" : "80",
              "InstancePort" : "80",
              "Protocol" : "HTTP"
            }
        ],
        "HealthCheck" : {
          "Target" : "HTTP:80/index.php",
          "HealthyThreshold" : "6",
          "UnhealthyThreshold" : "3",
          "Interval" : "10",
          "Timeout" : "5"
        },
        "Subnets" : [ { "Ref" : "PublicSubnet1" }, { "Ref" : "PublicSubnet2" } ],
        "Scheme" : "internet-facing",
        "CrossZone" : "True",
        "SecurityGroups" : [ { "Ref" : "SGelb" } ]
	    }
    },

    "ElbAlias" : {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : {"Ref":"HostedZoneName"},
        "Comment" : "Alias targeted to the LoadBalancer.",
        "RecordSets" : [
          {
            "Name" : {"Fn::Join": [".",[{"Ref":"AWS::StackName"},{"Ref":"HostedZoneName"}]]},
            "Type" : "A",
            "AliasTarget" : {
                "HostedZoneId" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "CanonicalHostedZoneNameID"] },
                "DNSName" : { "Fn::GetAtt" : ["ElasticLoadBalancer","CanonicalHostedZoneName"] }
            }
          }
        ]
      }
    }
  },


  "Outputs" : {
    "AppURL" : { "Description" : "Application URL", "Value" : {"Fn::Join": [".",[{"Ref":"AWS::StackName"},{"Ref":"HostedZoneName"}]]}}
  }
}
